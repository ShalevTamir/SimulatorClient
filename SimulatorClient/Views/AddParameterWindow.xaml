<Window x:Class="SimulatorClient.Views.AddParameterWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SimulatorClient.Views"
        mc:Ignorable="d"
        Title="AddParameterWindow" Height="700" Width="550"
        Background="Transparent"
        AllowsTransparency="True"
        WindowStyle="None">

    <Window.Resources>
        <FontFamily x:Key="MontserrantFont">pack://application:,,,/Assets/Fonts/#Montserrat Variable Font</FontFamily>
        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{StaticResource MontserrantFont}"></Setter>
            <Setter Property="Foreground" Value="#b3b3b3"></Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="textBoxStyle">
            <Setter Property="FontFamily" Value="{StaticResource MontserrantFont}"></Setter>
            <Setter Property="Foreground" Value="#b3b3b3"></Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="BorderBrush" Value="DarkGray"></Setter>
            <Setter Property="BorderThickness" Value="0, 0, 0, 1"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="FontSize" Value="20"></Setter>
            <Setter Property="Margin" Value="0, 10, 0, 50"></Setter>
            <Setter Property="CaretBrush" Value="White"></Setter>
        </Style>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent" Cursor="Hand" Margin="0, 0, 0, 25">
                            <BulletDecorator.Bullet>
                                <Grid Height="30" Width="30">
                                    <!--Define size of the Bullet-->
                                    <!--The two borders-->
                                    <Border Name="RadioOuter" Background="Transparent" BorderBrush="Gainsboro" BorderThickness="2" CornerRadius="50" />
                                    <Border CornerRadius="50" Margin="4" Name="RadioMark" Background="#FFADADAD" Visibility="Hidden" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <!--Text element-->
                            <TextBlock Margin="5,1,0,0" Style="{StaticResource textBoxStyle}" FontSize="17" VerticalAlignment="Center">
                        <ContentPresenter />
                            </TextBlock>
                        </BulletDecorator>
                        <!--If item is checked, trigger the visibility of the mark-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <!--If item is checked, trigger the visibility of the mark and change the color of the selected bullet into a darker gray for better highlighting-->
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#FFADADAD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <BitmapImage x:Key="plane-img" UriSource="/Assets/Images/plane.png"/>
        <BitmapImage x:Key="constraint-img" UriSource="/Assets/Images/constraint.png"/>
    </Window.Resources>
    <Border Background="#2d3338"
    CornerRadius="20">
        <Grid
        HorizontalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                <Button x:Name="btnMinimize" Content="&#xE949;" Click="btnMinimize_Click" Style="{StaticResource windowControlButtonStyle}"></Button>
                <Button x:Name="btnMaximize" Content="&#xE739;" Click="btnMaximize_Click" Style="{StaticResource windowControlButtonStyle}"></Button>
                <Button x:Name="btnClose" Content="&#xE106;" Click="btnClose_Click" Style="{StaticResource windowControlButtonStyle}"></Button>
            </StackPanel>

            <Grid HorizontalAlignment="Center" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>

                </Grid.RowDefinitions>
                <TextBlock
                    Margin="0, 0, 0, 35"
                    FontSize="35"
                    Foreground="White"
                    Grid.Row="0">
                Add Telemetry Constraint
                </TextBlock>
                <TextBlock
                    FontSize="25"
                    Grid.Row="1">
                    Parameter Name
                </TextBlock>
                <TextBox Padding="30,0,0,0" Grid.Row="2">
                    <TextBox.Background>
                        <ImageBrush 
                            ImageSource="{StaticResource plane-img}" 
                            Stretch="Uniform"
                            AlignmentX="Left">
                            <ImageBrush.Transform>
                                <ScaleTransform ScaleX=".8" ScaleY=".8"/>
                            </ImageBrush.Transform>
                        </ImageBrush>
                    </TextBox.Background>
                </TextBox>
                <TextBlock
                    FontSize="25"
                    Grid.Row="3">
                    Constraint Value
                </TextBlock>
                <TextBox Padding="30,0,0,0" Grid.Row="4">
                    <TextBox.Background>
                        <ImageBrush 
                            ImageSource="{StaticResource constraint-img}" 
                            Stretch="Uniform"
                            AlignmentX="Left"
                            AlignmentY="Bottom">
                            <ImageBrush.Transform>
                                <ScaleTransform ScaleX=".8" ScaleY=".8"/>
                            </ImageBrush.Transform>
                        </ImageBrush>
                    </TextBox.Background>
                </TextBox>

                <StackPanel Orientation="Vertical" Grid.Row="5" VerticalAlignment="Center">
                    <RadioButton Content="Bigger Than Constraint" IsChecked="{Binding IsBiggerThan}" />
                    <RadioButton Content="Smaller Than Constraint" IsChecked="{Binding IsSmallerThan}" />
                </StackPanel>

                <Button 
                    Margin="0,20,0,20"
                    Width="140"
                    Height="40"
                    FontSize="20"
                    Foreground="#b3b3b3"
                    Grid.Row="6"
                    FontFamily="{StaticResource MontserrantFont}"
                    VerticalAlignment="Bottom">
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="7"/>
                        </Style>
                        
                    </Button.Resources>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="bg"
                                            Background="{TemplateBinding Background}"
                                            BorderThickness="2"
                                            BorderBrush="#b3b3b3"
                                            CornerRadius="7">
                                            <ContentPresenter 
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#323538" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                    Confirm
                </Button>
            </Grid>
        </Grid>
    </Border>
</Window>
